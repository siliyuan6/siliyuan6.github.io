<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://siliyuan6.github.io</id>
    <title>SLYUAN</title>
    <updated>2021-03-04T06:39:25.075Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://siliyuan6.github.io"/>
    <link rel="self" href="https://siliyuan6.github.io/atom.xml"/>
    <subtitle>&quot;十年饮冰，难凉热血&quot;</subtitle>
    <logo>https://siliyuan6.github.io/images/avatar.png</logo>
    <icon>https://siliyuan6.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, SLYUAN</rights>
    <entry>
        <title type="html"><![CDATA[IntelliJ IDEA新建maven的spring项目]]></title>
        <id>https://siliyuan6.github.io/post/intellij-idea-xin-jian-maven-de-spring-xiang-mu/</id>
        <link href="https://siliyuan6.github.io/post/intellij-idea-xin-jian-maven-de-spring-xiang-mu/">
        </link>
        <updated>2021-03-04T05:50:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="intellij-idea新建maven的spring项目">IntelliJ IDEA新建maven的spring项目</h3>
<figure data-type="image" tabindex="1"><img src="file://https://i.loli.net/2021/03/04/G6FAsNoDijtz4Rq.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="file://https://i.loli.net/2021/03/04/Bj97NrIVgdDL8kW.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="file://https://i.loli.net/2021/03/04/TIy69gQDmlkCGjr.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="file://https://i.loli.net/2021/03/04/6YosO5zy1nTgGWZ.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="file://https://i.loli.net/2021/03/04/Vj5ygYupinrAUl7.png" alt="" loading="lazy"></figure>
<p>pom.xml添加如下代码：</p>
<pre><code class="language-xml">    &lt;dependency&gt;
      &lt;groupId&gt;org.springframework&lt;/groupId&gt;
      &lt;artifactId&gt;spring-context&lt;/artifactId&gt;
      &lt;version&gt;4.3.13.RELEASE&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre>
<p>Bean.xml文件代码：</p>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;
       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;

    &lt;bean id=&quot;helloworld&quot; class=&quot;org.example.HelloWorld&quot;&gt;
        &lt;property name=&quot;message&quot; value=&quot;Hello World!&quot;/&gt;

    &lt;/bean&gt;
&lt;/beans&gt;
</code></pre>
<p>App.java:</p>
<pre><code class="language-java">package org.example;

/**
 * Hello world!
 *
 */
public class App 
{
    public static void main( String[] args )
    {
        System.out.println( &quot;Hello World!&quot; );
    }
}

</code></pre>
<p>HelloWorld.java:</p>
<pre><code class="language-java">package org.example;

public class HelloWorld {
    private String message;
    public void setMessage(String message) {
        this.message = message;
    }
    public void getMessage() {
        System.out.println(&quot;Your Message：&quot; + message);
    }
}

</code></pre>
<p>MainApp.java:</p>
<pre><code class="language-java">package org.example;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class MainApp {
    public static void main(String[] args) {
        //创建应用程序的上下文
        ApplicationContext context = new ClassPathXmlApplicationContext(&quot;Bean.xml&quot;);
        //使用已创建的上下文的 getBean() 方法来获得所需的 bean，这个方法使用 bean 的 ID 返回一个最终可以转换为实际对象的通用对象。
        HelloWorld obj = (HelloWorld) context.getBean(&quot;helloworld&quot;);
        obj.getMessage();
    }
}
</code></pre>
]]></content>
    </entry>
</feed>